---
title: "EE vs ENE tables"
date: "`r Sys.Date()`"

format: 
  docx:
    reference-doc: "D:/PATHWEIGH/custom-reference-doc.docx"
    toc: true

execute: 
  echo: false
---


```{r, warning=FALSE, message=FALSE}
invisible(library(tidyverse))
library(gtsummary)
library(magrittr, include.only = "%<>%")
```

```{r}  
# Set the project root
proj_root <- "D:/PATHWEIGH/"

# Set the data delivery date to the appropriate data set
delivery <- "20240917"

# Load pp_data for ensuring that the same 9,358 patients are analyzed
load(str_c(proj_root, "delivery_", delivery, "/data/pp_data_", delivery, ".Rdata"))

# Load visits_post_id to create merge in variables
load(str_c(proj_root, "delivery_", delivery, "/data/visits_post_id_", delivery, ".Rdata"))

# Load pp_mod_data for merging in variables
# load(str_c(proj_root, "delivery_", delivery, "/data/pp_mod_data_", delivery, ".Rdata"))

# Save a copy as data so that it can be used as an input to other code chunks
# data <- pp_data

# Load comorbidity names for tables
# comorbidity_names <- readRDS(str_c(proj_root, "delivery_", delivery, "/data/comorbidity_names_", delivery, ".RDS"))
```

```{r, message = FALSE, warning = FALSE}
# Load data
# Set Cystatin C column to for importing as double, otherwise there may be too
# many NAs in the first x rows where read_csv() decides what column to assign.
# It may then assign first as logical, but then encounters a problem when it
# finally encounters a numeric value.
data <- read_csv("D:\\PATHWEIGH\\delivery_20240917\\data\\aim3_its_data_20240917.csv")
```

# Total number of patients

```{r}
data %>%
  group_by(Arb_PersonId) %>%
  slice_head() %>%
  ungroup() %>%
  summarise(N_unique_pts = n()) %>%
  gt::gt()
```

```{r}
# Data structuring to display variables in gtsummary tables
data %<>%
  mutate(Intervention.factor = factor(Intervention.factor, levels = c("Control", "Intervention"))) %>%
  mutate(Smoking_Status = fct_na_value_to_level(Smoking_Status, level = "Unknown")) %>%
  mutate(PHQ2_complete = ifelse(is.na(PHQ2), 0, 1),
         PHQ2_gt_0 = ifelse(PHQ2 > 0, 1, 0),
         PHQ9_complete = ifelse(is.na(PHQ9), 0, 1),
         GAD7_complete = ifelse(is.na(GAD7), 0, 1))
```


```{r}
# Count number of visits per phase
# Tabulate the number of visits in each phase for each patient
n_visits_per_pt <- 
  data %>%
  group_by(Arb_PersonId, Intervention.factor) %>%
  count() %>%
  ungroup() %>%
  pivot_wider(names_from = Intervention.factor, values_from = n) %>%
  mutate(across(Control:Intervention, ~ifelse(is.na(.x), 0, .x)))
```

```{r}
# Retrieve the ids of patients in each group
# 1) visits in control only, 
# 2) visits in intervention only,
# 3) visits in both
visits_in_both <- 
  n_visits_per_pt %>%
    filter(Control > 0, Intervention > 0) %>%
    pull(Arb_PersonId)

visits_in_con <- 
  n_visits_per_pt %>%
    filter(Control > 0, Intervention == 0) %>%
    pull(Arb_PersonId)

visits_in_int <- 
  n_visits_per_pt %>%
    filter(Control == 0, Intervention > 0) %>%
    pull(Arb_PersonId)

# Identify the first visits
first_visit_ids <- data %>%
  arrange(Arb_PersonId, Intervention.factor, EncounterDate) %>%
  group_by(Arb_PersonId, Intervention.factor) %>%
  slice_head() %>%
  pull(Arb_EncounterId)


# Create new variables
data <- 
  data %>%
    mutate(group = ifelse(Arb_PersonId %in% visits_in_con, "con", NA)) %>%
    mutate(group = ifelse(Arb_PersonId %in% visits_in_int, "int", group)) %>%
    mutate(group = ifelse(Arb_PersonId %in% visits_in_both, "both", group)) %>%
    mutate(first_visit = ifelse(Arb_EncounterId %in% first_visit_ids, 1, 0))
```

# Table: Weight at first visit by group stratified by EE status
- UC Only = Patients with visits in the UC phase only
- Int Only = Patients with visits in the Intervention phase only
- Both UC = Patients with visits in both phases, first UC phase visit
- Both Int = Patients with visits in both phases, first Intervention phase visit
```{r}
# data %>%
#   filter(first_visit == 1) %>%
#   # distinct(Arb_PersonId) %>%
#   nrow()


tab_data <- 
  data %>%
  filter(first_visit == 1) %>%
  select(Arb_PersonId, Weight_kgs, EE, Intervention.factor, group) %>%
  mutate(crossed_variable = str_c(Intervention.factor, group))


tab_data %>%
  mutate(crossed_variable = case_match(crossed_variable, 
                                      "Controlcon" ~ "UC Only",
                                      "Interventionint" ~ "Int Only",
                                      "Controlboth" ~ "Both UC",
                                      "Interventionboth" ~ "Both Int")) %>%
  mutate(crossed_variable = factor(crossed_variable, levels = c("UC Only", "Int Only", "Both UC", "Both Int" ))) %>%                                       
  select(Weight_kgs, EE, crossed_variable) %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~.x %>%
      tbl_summary(by = crossed_variable,
                  stat = list(all_continuous() ~ c("{mean} ({sd})")))
  ) %>%
  modify_spanning_header(c("stat_1_1", "stat_2_1", "stat_3_1", "stat_4_1") ~ "**ENE**") %>%
  modify_spanning_header(c("stat_1_2", "stat_2_2", "stat_3_2", "stat_4_2") ~ "**EE**")
```

# Table: Demographics and health metrics at the first recorded visit with weight by pattern of visits stratified by "enrollment" status
```{r}
# EE vs ENE, by group,
data %>%
  filter(IndexVisit == 1) %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status,
        group, EE) %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~.x %>%
      tbl_summary( by = group,
                  missing = "ifany",
                  type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

                  # Temporarily modify statistic to show min and max to check data ranges
                  # are reasonable
                  # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

                  statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                  label = list(Age ~ "Age (years)",
                               Weight_kgs ~ "Weight (kg)",
                               Race_Ethnicity ~ "Race/Ethnicity",
                               BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                               Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                               Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                               Smoking_Status ~ "Smoking Status"),
                  digits = list(all_categorical() ~ c(0,1),
                                  all_continuous() ~ c(1,1))
      )
  ) %>%
  modify_spanning_header(c("stat_1_1", "stat_2_1", "stat_3_1") ~ "**ENE**") %>%
  modify_spanning_header(c("stat_1_2", "stat_2_2", "stat_3_2") ~ "**EE**") %>%
  as_gt()
```


## Overall identified by phase
```{r}
data %>%
  filter(IndexVisit == 1) %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status,
        Intervention.factor) %>%
  tbl_summary(by = Intervention.factor,
                  missing = "ifany",
                  type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

                  # Temporarily modify statistic to show min and max to check data ranges
                  # are reasonable
                  # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

                  statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                  label = list(Age ~ "Age (years)",
                               Weight_kgs ~ "Weight (kg)",
                               Race_Ethnicity ~ "Race/Ethnicity",
                               BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                               Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                               Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                               Smoking_Status ~ "Smoking Status"),
                  digits = list(all_categorical() ~ c(0,1),
                                  all_continuous() ~ c(1,1))
      ) %>%
  as_gt()
```

## Overall identified by EE
```{r}
data %>%
  filter(IndexVisit == 1) %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status,
        EE) %>%
  tbl_summary(by = EE,
                  missing = "ifany",
                  type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

                  # Temporarily modify statistic to show min and max to check data ranges
                  # are reasonable
                  # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

                  statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                  label = list(Age ~ "Age (years)",
                               Weight_kgs ~ "Weight (kg)",
                               Race_Ethnicity ~ "Race/Ethnicity",
                               BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                               Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                               Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                               Smoking_Status ~ "Smoking Status"),
                  digits = list(all_categorical() ~ c(0,1),
                                  all_continuous() ~ c(1,1))
      ) %>%
  as_gt()
```

# Table of demographics and metrics at the first visit with a recorded weight by intervention phase stratified by enrollment (evidence of WPV)

```{r}
tab1 <- data %>%
  filter(IndexVisit == 1) %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status,
        Intervention.factor, EE) %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~.x %>%
      tbl_summary( by = Intervention.factor,
                  missing = "ifany",
                  type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

                  # Temporarily modify statistic to show min and max to check data ranges
                  # are reasonable
                  # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

                  statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                  label = list(Age ~ "Age (years)",
                               Weight_kgs ~ "Weight (kg)",
                               Race_Ethnicity ~ "Race/Ethnicity",
                               BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                               Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                               Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                               Smoking_Status ~ "Smoking Status"),
                  digits = list(all_categorical() ~ c(0,1),
                                  all_continuous() ~ c(1,1))
      )

  )

 tab1 %>%
  modify_spanning_header(c("stat_1_1", "stat_2_1") ~ "**ENE**") %>%
  modify_spanning_header(c("stat_1_2", "stat_2_2") ~ "**EE**") %>%
  as_gt()
```




# Table of demographics and metrics at index visits overall

```{r}
tab1.1 <- data %>%
  filter(IndexVisit == 1) %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status) %>%

      tbl_summary(
                  missing = "ifany",
                  type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

                  # Temporarily modify statistic to show min and max to check data ranges
                  # are reasonable
                  # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

                  statistic = list(all_continuous() ~ c("{mean} ({sd})")),
                  label = list(Age ~ "Age (years)",
                               Weight_kgs ~ "Weight (kg)",
                               Race_Ethnicity ~ "Race/Ethnicity",
                               BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                               Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                               Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                               Smoking_Status ~ "Smoking Status"),
                  digits = list(all_categorical() ~ c(0,1),
                                  all_continuous() ~ c(1,1))
      )

tab1.1 %>%
  as_gt()
```

# Table of demographic and health metrics at the first WPV for those who have one
- Not mutually exclusive groups
- Comorbidities not captured for these visits
```{r}
# Get new index visit
data %>%
  filter(WP_Visit == 1) %>%
  arrange(Arb_PersonId, Intervention.factor, EncounterDate) %>%
  group_by(Arb_PersonId, Intervention.factor) %>%
  slice_head() %>%
  ungroup() %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        # A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status,
        Intervention.factor) %>%
  tbl_summary( by = Intervention.factor,
            missing = "ifany",
            type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

            # Temporarily modify statistic to show min and max to check data ranges
            # are reasonable
            # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

            statistic = list(all_continuous() ~ c("{mean} ({sd})")),
            label = list(Age ~ "Age (years)",
                          Weight_kgs ~ "Weight (kg)",
                          Race_Ethnicity ~ "Race/Ethnicity",
                          BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                          Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                          Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                          Smoking_Status ~ "Smoking Status"),
            digits = list(all_categorical() ~ c(0,1),
                            all_continuous() ~ c(1,1))
)

```

# Table of demographic and health metrics for those with at least one WPV
- Health metrics taken form first WPV
```{r}
data %>%
  filter(WP_Visit == 1) %>%
  arrange(Arb_PersonId, EncounterDate) %>%
  group_by(Arb_PersonId) %>%
  slice_head() %>%
  ungroup() %>%
  select(Age, Sex, Race_Ethnicity, Insurance, Weight_kgs, BMI,
        Systolic_blood_pressure, Diastolic_blood_pressure,
        # A1C:TSH, -`Cystatin C`, EOSS,
        PHQ2, PHQ2_complete, PHQ2_gt_0, PHQ9, PHQ9_complete, GAD7, GAD7_complete, Smoking_Status) %>%
  tbl_summary(
            missing = "ifany",
            type = list(c(PHQ2, PHQ9, GAD7) ~ 'continuous'),

            # Temporarily modify statistic to show min and max to check data ranges
            # are reasonable
            # statistic = list(all_continuous() ~ c("{mean} ({sd}; {min}; {max})")),

            statistic = list(all_continuous() ~ c("{mean} ({sd})")),
            label = list(Age ~ "Age (years)",
                          Weight_kgs ~ "Weight (kg)",
                          Race_Ethnicity ~ "Race/Ethnicity",
                          BMI ~ "BMI (kg/m\U00B2)", # U00B2 will display meters squared
                          Systolic_blood_pressure ~ "Systolic BP (mmHg)",
                          Diastolic_blood_pressure ~ "Diastolic BP (mmHg)",
                          Smoking_Status ~ "Smoking Status"),
            digits = list(all_categorical() ~ c(0,1),
                            all_continuous() ~ c(1,1))
)
```

# Weight related care by 
```{r, eval = FALSE}
# Check if the intervention counts were included
data %>% 
  filter(group == "both") %>% 
  arrange(Arb_PersonId, Intervention.factor, EncounterDate) %>%
  group_by(Arb_PersonId, Intervention.factor) %>%
  slice_head() %>%
  select(Arb_PersonId, EncounterDate, Intervention.factor, Ref_BariatricSurgery)


data %>%
  filter(group == "both") %>%
  group_by(Arb_PersonId) %>%
  summarise(sum_ref_bs = sum(Ref_BariatricSurgery, na.rm = TRUE)) %>%
  filter(sum_ref_bs > 1)
```


```{r}
# Consider the counts from the intervention phase
temp <- data %>%
  filter(group == "both") %>%
  arrange(Arb_PersonId, Intervention.factor, EncounterDate) %>%
  group_by(Arb_PersonId, Intervention.factor) %>%
  slice_head() %>%
  ungroup() %>%
  select(
    Arb_PersonId,
    Ref_BariatricSurgery:Ref_WellnessClinic,
    BariatricSurgery,
    N_Meds_AOM) %>%
  group_by(Arb_PersonId) %>%
  summarise_all(list(sum)) %>%
  ungroup()

# merge in the EE variable
temp <- temp %>%
  left_join(
    (data %>%
      filter(
        IndexVisit == 1, 
        Arb_PersonId %in% temp$Arb_PersonId) %>%
      select(Arb_PersonId, EE)),
    by = "Arb_PersonId"
  )


# Modify the count variables to binary variables
temp <- temp %>%
  mutate(across(Ref_BariatricSurgery:N_Meds_AOM, ~ ifelse(.x >= 1, 1, 0))) %>%
  mutate(group = "both")
  
# index visits for those not in both
index_visits <- data %>%
  filter(IndexVisit == 1, group != "both" ) %>%
  select(EE, Ref_BariatricSurgery:Ref_WellnessClinic, BariatricSurgery, N_Meds_AOM, group) %>%
  mutate(across(N_Meds_AOM, ~ifelse(. >= 1, 1, 0)))

# Create a data frame for table 2
tab2_data <- 
  bind_rows(temp %>% select(-Arb_PersonId), index_visits)
```

```{r, eval = FALSE}
tab2_data %>%
  select(EE, group, BariatricSurgery) %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~ .x %>%
        tbl_summary(by = group)

  )


data %>%
  filter(IndexVisit == 1) %>%
  select(EE, group, BariatricSurgery) %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~ .x %>%
        tbl_summary(by = group)

  )
```

```{r, eval = TRUE}
tab2_data %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~.x %>%
      tbl_summary(
        by = group,
        missing = "ifany",        
        label = list( 
          Ref_BariatricSurgery ~ "Referral to bariatric surgery",
          Ref_BehavioralHealth ~ "Referral to behavioral health",
          Ref_Dietician ~ "Referral to dietician",
          Ref_Endo ~ "Referral to endocrinology",
          Ref_WellnessClinic ~ "Referral to wellness clinic",
          BariatricSurgery ~ "Bariatric surgery",
          N_Meds_AOM ~ "Anti-obesity medications"),
        digits = list(
          all_categorical() ~ c(0, 2),
          all_continuous() ~ c(1, 1))
      )
  )%>%
  modify_spanning_header(c("stat_1_1", "stat_2_1", "stat_3_1") ~ "**ENE**") %>%
  modify_spanning_header(c("stat_1_2", "stat_2_2", "stat_3_2") ~ "**EE**") %>%
  as_gt()
```

# Table of comorbidities
```{r, eval = TRUE}
# EE vs ENE, by group, DOES NOT CONSIDER INTERVENTION PHASE FOR GROUP == BOTH
data %>%
  filter(IndexVisit == 1) %>%
  select(
    group,
    EE,
    # Hypertension:"Body-image dissatisfaction", # All comorbidities
    Hypertension:CKD, # Comorbidities above 3%
    ) %>%
  tbl_strata(
    strata = EE,
    .tbl_fun = 
      ~.x %>%
      tbl_summary(
        by = group,
        missing = "ifany",        
        # label = list( 
        #   Ref_BariatricSurgery ~ "Referral to bariatric surgery",
        #   Ref_BehavioralHealth ~ "Referral to behavioral health",
        #   Ref_Dietician ~ "Referral to dietician",
        #   Ref_Endo ~ "Referral to endocrinology",
        #   Ref_WellnessClinic ~ "Referral to wellness clinic",
        #   BariatricSurgery ~ "Bariatric surgery",
        #   N_Meds_AOM ~ "Anti-obesity medications"),
        digits = list(
          all_categorical() ~ c(0, 2),
          all_continuous() ~ c(1, 1))
      )
  )%>%
  modify_spanning_header(c("stat_1_1", "stat_2_1", "stat_3_1") ~ "**ENE**") %>%
  modify_spanning_header(c("stat_1_2", "stat_2_2", "stat_3_2") ~ "**EE**") %>%
  as_gt()
```



# Baseline weights
```{r}
data %>%
  filter(IndexVisit == 1) %>%
  summarise(avg_weight = mean(Weight_kgs))
```